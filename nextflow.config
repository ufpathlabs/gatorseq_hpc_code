params 
	{
	human_ref_bwa= "/ufrc/chamala/share/ucsc_hg19/ucsc_hg19_without_halotypes_CRLF2_100bp_padded_chrY_masked_bwa_index/ucsc_hg19_without_halotypes_CRLF2_100bp_padded_chrY_masked_bwa"
	human_ref_fasta="/ufrc/chamala/share/ucsc_hg19/ucsc_hg19_without_halotypes_CRLF2_100bp_padded_chrY_masked.fasta"
	
	pair1 = "/ufrc/chamala/snmishra/TS-00-00-24020/TS*/*_R1_*.fastq.gz"
	
	pair2 = "/ufrc/chamala/snmishra/TS-00-00-24020/TS*/*_R2_*.fastq.gz"
	
	rm_temp_files = 1
	
	AF_THR = 0.01
	
    yamlConfig = "/ufrc/chamala/snmishra/mainscript/hpc_gatorseq.config.yaml"
	
	bed_split_len = 20
	
	merge_bam = "merged.bam"
	
	bwa_map_sort{
		log = "sample.bwa_map_sort.bam.log"
		threads = 8
		memory="8G"
	}
	merging{
		log="sample.merge_mark_dup_variant_call.log"
		threads = 8
		merge_bam= "sample.merged.bam"
        vardict_vcf_file= "sample_variant.vcf"
        bgzip_vardict_vcf_file= "sample_variant.vcf.gz"
		dedup_bam = "dedup_bam.bam"
		dedup_bam_bai = "dedup_bam.bam.bai"
		vcf_file = "sample.vcf"
	}
	
	generate_metrics_file {
		log="sample.metrics.log"
		buffer_size="3072"
		sample_id= "sample" 
        sample_name= "sample" 
        run_folder= "RUN_NAME" 
        total_bamutils_out= sample_name+ ".bamutil_stats_total.metrics.tmp.txt"
        target_bamutils_out= sample_name + ".bamutil_stats_target.metrics.tmp.txt"
        paddedtarget_bamutils_out= sample_name + ".bamutil_stats_paddedtarget.metrics.tmp.txt"
        coverage_out_merged_target_bed_file= sample_name+ ".bedtools_coverage_out_merged_target_bed_file.metrics.tmp.txt"
        coverage_out_probe_target_bed_file= sample_name + ".bedtools_coverage_out_probe_target_bed_file.metrics.tmp.txt"
        mean_stdev_coverage_out_probe_target_bed_file= sample_name + ".bedtools_mean_stdev_coverage_out_probe_target_bed_file.metrics.tmp.txt"
        bamtools_stats_out= sample_name + ".bamtools_stats_out.metrics.tmp.txt"
        rtgtools_stats_out= sample_name + ".rtgtools_stats_out.metrics.tmp.txt"
        sort_order_chr_names= sample_name + ".sort_order_chr_names.metrics.tmp.txt"
        resort_merged_target_bed_file= sample_name + ".resort_merged_target_bed_file.metrics.tmp.bed"
        resort_probe_target_bed_file= sample_name + ".resort_probe_target_bed_file.metrics.tmp.bed" 
        temp_metrics_file= sample_name + ".metrics.tmp.txt"
		metrics_file = 'sample.summary.csv' 
		coverage_file = 'sample.coverage.csv'
	}
	
	merge_log_benchmark_files{
		final_logs = "sample.completes_logs.txt"
		final_benchmark = "sample.completes_benchmark.txt"
	}
		
	}


process {
 $bwa_map_sort 
    {
		executor='slurm'
		module = 'bwa/0.7.17:sambamba/0.6.6'   
		clusterOptions = "--account=chamala --qos=chamala --time=120:15:00 --mem-per-cpu=3gb --cpus-per-task=8  --ntasks=1 --nodes=1"
 
   }
 $merging
    {
        executor='slurm'
        module = 'sambamba/0.6.3'
        clusterOptions = "--account=chamala --qos=chamala --time=120:15:00 --mem-per-cpu=3gb --cpus-per-task=8  --ntasks=1 --nodes=1"

   }
   
  $generate_metrics_file
    {
        executor='slurm'
        module = 'bamutil/1.0.2:datamash/1.1.0:sambamba/0.6.3:gcc/5.2.0:bedtools/2.26.0:bamtools/2.1.1:rtgtools/3.7.1'
        clusterOptions = "--account=chamala --qos=chamala --time=120:15:00 --mem-per-cpu=3gb --cpus-per-task=8  --ntasks=1 --nodes=1"

   }
   
     $merge_log_benchmark_files
    {
        executor='slurm'
        module = 'bamutil/1.0.2:datamash/1.1.0:sambamba/0.6.3:gcc/5.2.0:bedtools/2.26.0:bamtools/2.1.1:rtgtools/3.7.1'
        clusterOptions = "--account=chamala --qos=chamala --time=120:15:00 --mem-per-cpu=3gb --cpus-per-task=8  --ntasks=1 --nodes=1"

   }
}

